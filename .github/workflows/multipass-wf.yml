name: "multipass CI workflow"


on:
  push:
    branches: [ test ]


jobs:

  ubuntu-1804-job:
    name: "multipass on ubuntu-18.04"
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status  
    - name: "snap multipass"
      run: |
          snap --version #make sure snap installed
          snap info multipass
          snap info --verbose multipass
          # uses classic confinement, channel latest/stable
          sudo snap install --classic  --channel=stable  multipass
          snap list 
          snap list --all multipass
          snap changes 
          #create virtual python 3 environment
          pip3 install virtualenv
          virtualenv -p $(which python3) ~venvpy3
          source ~venvpy3/bin/activate
          pip install -r requirements.txt
          python --version
          export VM_NAME="VM01"
          export CPU="1"
          export MEMORY="4G"
          export DISK="5G"
          export CLOUD_INIT_FILE="config/cloud-init.yaml"
          ls -l /var/snap/multipass/common/multipass_socket
          if [ "$( sudo multipass list | grep -c "$VM_NAME")"   -ne 0  ] 2>/dev/null; then
            echo "VM: $VM_NAME is Provisioned"
          else
            echo "VM: $VM_NAME Yet To Be Provisioned."
          fi
          echo "$VM_NAME  provision started"  
          start=$(date +%s)
          # check if VT is enabled in the BIOS, 
          sudo apt-get install cpu-checker -y
          # use the kvm-ok tool, which is included in the cpu-checker package.
          kvm-ok
          sudo /usr/sbin/kvm-ok
          #/sbin/check_kvm_support
          #launch failed: The check_kvm_support script failed to start. Ensure it is in multipassd's PATH.
          # sudo multipass launch -c"$CPU" -m"$MEMORY" -d"$DISK" -n "$VM_NAME" lts --cloud-init "$CLOUD_INIT_FILE"                  
          end=$(date +%s) &&  runtime=$((end-start))
          echo $runtime


  # ubuntu-2004-job:
  #   name: "lxd on ubuntu-20.04"
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "lxd testing"
  #     run: |
  #       snap list
  #       # sudo lxd init
  #       # sudo lxd --version

  # ubuntu-latest-job:
  #   name: "lxd on ubuntu-latest"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "lxd testing"
  #     run: |
  #       sudo snap install lxd
  #       sudo lxd init
  #       sudo lxd --version
